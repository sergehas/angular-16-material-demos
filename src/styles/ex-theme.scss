@use "@angular/material" as mat;

/// Defines a light color theme with success and danger colors.
/// @param {Map} $primary The primary color palette.
/// @param {Map} $accent The accent color palette.
/// @param {Map} $warn The warn color palette.
/// @param {Map} $success The success color palette.
/// @param {Map} $danger The danger color palette.
/// @param {Boolean} $create-light-theme If true a light theme is created, otherwise a dark theme is created
@function extend-theme(
  $primary,
  $accent,
  $warn: mat.$m2-orange-palette,
  $success: mat.$m2-green-palette,
  $warning: mat.$m2-orange-palette,
  $error: mat.$m2-red-palette,
  $create-light-theme: true,
  $typography: mat.m2-define-typography-config()
) {
  $primary: mat.m2-define-palette($primary);
  $accent: mat.m2-define-palette($accent);
  $warn: mat.m2-define-palette($warn);

  $success: mat.m2-define-palette($success);
  $warning: mat.m2-define-palette($warning);
  $error: mat.m2-define-palette($error);

  $theme: null;

  @if ($create-light-theme) {
    $theme: mat.m2-define-light-theme(
      (
        color: (
          primary: $primary,
          accent: $accent,
          warn: $warn,
        ),
        typography: $typography,
      )
    );
  } @else {
    $theme: mat.m2-define-dark-theme(
      (
        color: (
          primary: $primary,
          accent: $accent,
          warn: $warn,
        ),
        typography: $typography,
      )
    );
  }
  $swe: (
    success: $success,
    warning: $warning,
    error: $error,
  );
  @return map-merge($theme, $swe);
}
